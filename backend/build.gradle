plugins {
	id 'org.springframework.boot' version '2.5.0'
	id 'io.spring.dependency-management' version '1.0.11.RELEASE'
	id 'org.asciidoctor.convert' version '1.5.8'
	id 'java'
}

group = 'de.jkrech'
version = '0.0.1-SNAPSHOT'

repositories {
	mavenCentral()
}

ext {
	set('snippetsDir', file("build/generated-snippets"))
}

dependencies {
	implementation 'org.springframework.boot:spring-boot-starter-actuator'
	implementation 'org.springframework.boot:spring-boot-starter-web'
	developmentOnly 'org.springframework.boot:spring-boot-devtools'
	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'org.springframework.restdocs:spring-restdocs-mockmvc'
}

test {
	outputs.dir snippetsDir
	useJUnitPlatform()
}

asciidoctor {
	inputs.dir snippetsDir
	dependsOn test
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(11))
    }
}

// creates build/resources/main/build-info.properties
springBoot {
	buildInfo {
		properties {
			artifact = "todo-a-rest"
			version = "${project.version}"
			group = "${project.group}"
			name = 'TODO a REST'
		}
	}
}

// Frontend + Backend = Happyend
tasks.register('processFrontendResources', Copy) {
    // Directory containing the artifacts in the frontend project
    def frontendBuildDir = file("${project(':react-frontend').buildDir}/")
    // Directory where the frontend artifacts must be copied to be packaged alltogether with the backend by the 'war'
    // plugin.
    def frontendResourcesDir = file("${project.buildDir}/resources/main/public")

    group 'Frontend'
    description 'Process frontend resources'
    dependsOn project(':react-frontend').tasks.named('assembleFrontend')

    from frontendBuildDir
    into frontendResourcesDir
}

tasks.named('processResources') {
    dependsOn tasks.named('processFrontendResources')
}

